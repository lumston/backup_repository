
name: backupRepo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  workflow_call:
    secrets:
      USER_CODECOMMIT:
        required: true
      PASSWORD_CODECOMMIT:
        required: true
      TOKEN_GITHUB:
        required: true
      AWS_CODECOMMIT_KEY:
        required: true
      AWS_CODECOMMIT_SECRET:
        required: true
     
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  repoName: ${{ github.event.repository.name }}
  source: https://${{secrets.TOKEN_GITHUB}}@github.com/lumston/${{ github.event.repository.name }}
  user: ${{secrets.USER_CODECOMMIT}}
  password: ${{secrets.PASSWORD_CODECOMMIT}}
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CODECOMMIT_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CODECOMMIT_SECRET }}
  
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          aws-region: us-east-1
        
      - name: test
        run: |
          echo $(aws codecommit list-repositories|grep $repoName | cut -f2 -d ':'|cut -f1 -d ','|cut -f2 -d '"')
          echo $repoName
          aws codecommit list-repositories|grep $repoName
      - name: env
        run:  if [ -f $(aws codecommit list-repositories|grep $repoName | cut -f2 -d ':'|cut -f1 -d ','|cut -f2 -d '"') != $repoName ] ; then echo "CREAR DE CERO" ; else echo "SUBIR"; fi
      #run: |
      # - uses: actions/checkout@v3
      #    exist=$(aws codecommit list-repositories|grep $repoName)
      #    echo $exist
          #git clone --mirror $source $repoName
          #cd $repoName
          #git push https://$user:$password@git-codecommit.us-east-1.amazonaws.com/v1/repos/$repoName --all      
